"""empty message

Revision ID: a37f21645ba2
Revises: 01cab35afb8b
Create Date: 2020-05-28 01:30:51.617243

"""
from alembic import op
import sqlalchemy as sa
import json

from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

import models

# revision identifiers, used by Alembic.
revision = 'a37f21645ba2'
down_revision = '01cab35afb8b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teachers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('about', sa.Text(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('picture', sa.Text(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('goals', sa.String(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('about'),
    sa.UniqueConstraint('picture')
    )
    op.create_table('teacher_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('goal', sa.String(), nullable=True),
    sa.Column('time_ability', sa.String(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teacher_slots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('week_day', sa.String(length=10), nullable=False),
    sa.Column('time', sa.String(length=5), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bookings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('week_day', sa.String(length=10), nullable=False),
    sa.Column('time', sa.String(length=5), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('slot_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['slot_id'], ['teacher_slots.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###

    ##### получаем данные из json файла
    with open('data.json', 'r') as f:
        lst_data = json.load(f)

    ##### создаем сессию
    some_engine = create_engine('postgresql://postgres:65536216@127.0.0.1:5432/tutor')
    Session = sessionmaker(bind=some_engine)
    session = Session()
    ##### добавляем данные в БД
    for t in lst_data[1]:
        teacher = models.Teacher(name=t['name'],
                                 about=t['about'],
                                 rating=t['rating'],
                                 picture=t['picture'],
                                 price=t['price'],
                                 goals=str('goals'))
        session.add(teacher)
        for key, value in t.free.items():
            for sub_key, sub_value in value.items():
                slot = models.TeacherSlot(week_day=key,
                                          time=sub_key,
                                          is_available=sub_value,
                                          teacher_id=t['id'])
                session.add(slot)
    session.commit()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bookings')
    op.drop_table('teacher_slots')
    op.drop_table('teacher_requests')
    op.drop_table('teachers')
    op.drop_table('students')
    # ### end Alembic commands ###
